var Mist,slice=[].slice;Mist=function(){function t(t){return this.options=null!=t?t:{},"undefined"==typeof Eventify||"undefined"==typeof dash?void console.warn("You are missing the following dependencies: \n	"+("undefined"==typeof Eventify?"Eventify (https://github.com/sdomino/eventify)":"")+" \n	"+("undefined"==typeof dash?"Dash (https://github.com/sdomino/dash)":"")+" \n\nThe Mist client will be unable to function properly until all dependencies are satisfied."):(Eventify.extend(this),dash.setPrefix("Mist"),dash.setLevel(this.options.logLevel||"DEBUG"),this.options.logsEnabled&&dash.enableLogs(),this.on("mist:_socket.onopen",function(t){return function(){var t,n,e;return e=arguments[0],n=arguments[1],t=3<=arguments.length?slice.call(arguments,2):[],dash.debug(e,n,t)}}(this)),this.on("mist:_socket.reconnect",function(t){return function(){var t,n,e;return e=arguments[0],n=arguments[1],t=3<=arguments.length?slice.call(arguments,2):[],dash.debug(e,n,t)}}(this)),this.on("mist:_socket.onmessage",function(t){return function(){var t,n,e;return e=arguments[0],n=arguments[1],t=3<=arguments.length?slice.call(arguments,2):[],dash.info(e,n,t)}}(this)),this.on("mist:_socket.onerror",function(t){return function(){var t,n,e;return e=arguments[0],n=arguments[1],t=3<=arguments.length?slice.call(arguments,2):[],dash.error(e,n,t)}}(this)),this.on("mist:_socket.onclose",function(t){return function(){var t,n,e;return e=arguments[0],n=arguments[1],t=3<=arguments.length?slice.call(arguments,2):[],dash.debug(e,n,t)}}(this)),this.on("mist:command.ping",function(t){return function(){var t,n,e;return e=arguments[0],n=arguments[1],t=3<=arguments.length?slice.call(arguments,2):[],dash.debug(e,n,t)}}(this)),this.on("mist:command.subscribe",function(t){return function(){var t,n,e;return e=arguments[0],n=arguments[1],t=3<=arguments.length?slice.call(arguments,2):[],dash.debug(e,n,t)}}(this)),this.on("mist:command.unsubscribe",function(t){return function(){var t,n,e;return e=arguments[0],n=arguments[1],t=3<=arguments.length?slice.call(arguments,2):[],dash.debug(e,n,t)}}(this)),this.on("mist:command.list",function(t){return function(){var t,n,e;return e=arguments[0],n=arguments[1],t=3<=arguments.length?slice.call(arguments,2):[],dash.log("%cMist.log ::",e,n)}}(this)),this.on("mist:data",function(t){return function(){var t,n,e;return e=arguments[0],n=arguments[1],t=3<=arguments.length?slice.call(arguments,2):[],dash.debug(e,n,t)}}(this)),this.on("mist:data.error",function(t){return function(){var t,n,e;return e=arguments[0],n=arguments[1],t=3<=arguments.length?slice.call(arguments,2):[],dash.error(e,n,t)}}(this)),this.on("mist:metadata.action:create",function(t){return function(){var t,n,e;return e=arguments[0],n=arguments[1],t=3<=arguments.length?slice.call(arguments,2):[],dash.debug(e,n,t)}}(this)),this.on("mist:metadata.action:update",function(t){return function(){var t,n,e;return e=arguments[0],n=arguments[1],t=3<=arguments.length?slice.call(arguments,2):[],dash.debug(e,n,t)}}(this)),void this.on("mist:metadata.action:destroy",function(t){return function(){var t,n,e;return e=arguments[0],n=arguments[1],t=3<=arguments.length?slice.call(arguments,2):[],dash.debug(e,n,t)}}(this)))}return t.prototype.connect=function(t,n){var e,i,s,o;return null==n&&(n=!1),this._socket_url=t,this._socket=new WebSocket(t),null!=(e=this._socket)&&(e.onopen=function(t){return function(e){return t.fire("mist:_socket.onopen",e),n?t.fire("mist:_socket.reconnect",e):void 0}}(this)),null!=(i=this._socket)&&(i.onerror=function(t){return function(n){return t.fire("mist:_socket.onerror",n)}}(this)),null!=(s=this._socket)&&(s.onclose=function(t){return function(n){return t.fire("mist:_socket.onclose",n)}}(this)),null!=(o=this._socket)&&(o.onmessage=function(t){return function(n){var e,i,s,o,r;if(t.fire.apply(t,["mist:_socket.onmessage"].concat(slice.call(arguments))),s=JSON.parse(n.data),t.fire("mist:data",s),(o=null!=s?s.error:void 0)&&t.fire("mist:data.error",s.error),i=null!=s?s.command:void 0)switch(i){case"ping":t.fire("mist:command.ping",s);break;case"subscribe":t.fire("mist:command.subscribe",s);break;case"unsubscribe":t.fire("mist:command.unsubscribe",s);break;case"list":t.fire("mist:command.subscriptions",s.subscriptions)}if(null!=s?s.data:void 0)try{if(r=JSON.parse(null!=s?s.data:void 0),e=r.action)switch(e){case"create":return t.fire("mist:metadata.action:create",s);case"update":return t.fire("mist:metadata.action:update",s);case"destroy":return t.fire("mist:metadata.action:destroy",s)}}catch(c){return dash.debug("Unable to parse data - "+r)}}}(this)),this._socket},t.prototype.reconnect=function(){return this.disconnect(),this.connect(this._socket_url,!0)},t.prototype.disconnect=function(){var t;return null!=(t=this._socket)?t.close():void 0},t.prototype.subscribe=function(t){var n;return null==t&&(t=[]),this.is_connected()?null!=(n=this._socket)&&n.send(JSON.stringify({command:"subscribe",tags:t})):this.once("mist:_socket.onopen",function(n){return function(e){return n.subscribe(t)}}(this)),t},t.prototype.unsubscribe=function(t){var n;null==t&&(t=[]),this.is_connected()?null!=(n=this._socket)&&n.send(JSON.stringify({command:"unsubscribe",tags:t})):this.once("mist:_socket.onopen",function(n){return function(e){return n.unsubscribe(t)}}(this))},t.prototype.list=function(){var t;this.is_connected()?null!=(t=this._socket)&&t.send(JSON.stringify({command:"list"})):this.once("mist:_socket.onopen",function(t){return function(n){return t.subscriptions()}}(this))},t.prototype.state=function(){var t,n;switch(null!=(t=this._socket)?t.readyState:void 0){case 0:return"not connected";case 1:return"open";case 2:return"closing";case 3:return"closed";default:return"unknown state - "+(null!=(n=this._socket)?n.readyState:void 0)}},t.prototype.is_connected=function(){return"open"===this.state()},t.prototype.ping=function(){var t;return null!=(t=this._socket)?t.send(JSON.stringify({command:"ping"})):void 0},t}();